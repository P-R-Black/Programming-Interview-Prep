const fullStackQuestionBank = [
    {
        question: 'Which of the following is NOT a core principle used in object-oriented software design and programming?',
        answers: [
            'Immutability',
            'Inheritance',
            'Polymorphism',
            'Encapsulation',
        ],
        correct: 'Immutability',
        explanation: '',
        questionId: '27000',
        keyword: ['Object-oriented programming', 'OOP Inheritance', 'OOP Polymorphism', 'OOP Encapsulation'],
    },
    {
        question: 'To create web apps that can gracefully handle a lost network connection and sync data in a background thread after the device comes back online, you should use?',
        answers: [
            'TheAppCache API',
            'A Service Worker',
            'A Worklet',
            'A Shared Worker',
        ],
        correct: 'A Service Worker',
        explanation: 'Service Workers are scripts that run in the background, separate from the main browser thread.',
        questionId: '27001',
        keyword: [''],
    },
    {
        question: 'You do not want the browser or intermediate servers to provide a cached version of the resource, regardless of cache validity. Which "Cache-Control" header should your client provide in the request?',
        answers: [
            'Cache-Control: proxy-revalidate',
            'Cache-Control: no-cache',
            'Cache-Control: no-store',
            'Cache-Control: immutable',
        ],
        correct: 'Cache-Control: no-store',
        explanation: 'no-store tells the browser and any intermediate caches not to store the resource at all — meaning every request will go to the origin server, regardless of cache validity.',
        questionId: '27002',
        keyword: ['HTTP Caching Fundamentals', 'Cache-Control headers'],
    },
    {
        question: 'What is the purpose of unit testing?',
        answers: [
            'To test a software application as a complete unit and ensure it complies with expected functional requirements.',
            'To test independently developed units of code and verify that they work correctly when interacting with each other',
            'To test small, individual units of code (such as methods, classes, or modules) and verify their correctness',
            'To test different application workflows from start to finish and simulate real use-case scenarios',
        ],
        correct: 'To test small, individual units of code (such as methods, classes, or modules) and verify their correctness',
        explanation: 'Unit testing is about trust. It gives you confidence that your code works now, keeps working after changes, and behaves exactly the way you think it should.',
        questionId: '27003',
        keyword: ['unit testing'],
    },
    {
        question: 'Why do assets sometimes have extra characters in their filenames, e.g. script.3ebe4e93.js?',
        answers: [
            'The characters are a link to a sourcemap, which aids in debugging.',
            'This is a hash of the file\'s contents, which busts caches when new versions are released.',
            'This is the file\'s git commit hash, which makes it easy to track the last time the file was updated.',
            'These are random characters are added to the filename at deploy time to bust caches.',
        ],
        correct: 'This is a hash of the file\'s contents, which busts caches when new versions are released.',
        explanation: 'Those extra characters are a content hash used to uniquely identify a file’s version. It’s a cache-busting technique to ensure users always get the latest version without sacrificing caching performance',
        questionId: '27004',
        keyword: ['content hash', 'cache-busting'],
    },
    {
        question: 'In the context of a RESTful APl, which of the following HTTP requests should NOT be used to add or update a user\'s profile information?',
        answers: [
            'A POST request to a users/:id endpoint',
            'A GET request to a /users/:id endpoint',
            'A PUT request to a /users/:id endpoint',
            'A PATCH request to a users/id endpoint',
        ],
        correct: 'A GET request to a /users/:id endpoint',
        explanation: 'GET is intended for retrieving data, not modifying it. In REST, GET requests should be safe (no side effects) and idempotent (repeated calls don’t change state).',
        questionId: '27005',
        keyword: ['RESTful APl request', 'GET', 'POST', 'PUT', 'PATCH'],
    },
    {
        question: 'How do you validate incoming request data in an Express + Typescript backend?',
        answers: [
            'You can use middleware like express-validator.',
            '',
            '',
            '',
        ],
        correct: 'You can use middleware like express-validator.',
        explanation: 'express-validator ensures fields exist and have the right types before persisting them. Errors can then be returned with validationResult(req).',
        questionId: '27006',
        keyword: ['Node.js', 'express', 'express-validator'],
    },
    {
        question: 'Why should API responses include the saved entity instead of just a success message?',
        answers: [
            'Returning the saved entity lets the frontend immediately update its state with the database-generated fields (like id, status, timestamps). This keeps the UI in sync without needing another fetch.',
            '',
            '',
            '',
        ],
        correct: 'Returning the saved entity lets the frontend immediately update its state with the database-generated fields (like id, status, timestamps). This keeps the UI in sync without needing another fetch.',
        explanation: '',
        questionId: '27007',
        keyword: [''],
    },
    {
        question: 'What is Cross-origin resource sharing (CORS)?',
        answers: [
            '',
            '',
            '',
            'CORS is a security feature that restricts web applications from making requests to a domain different fromt he one which served the web page.',
        ],
        correct: 'CORS is a security feature that restricts web applications from making requests to a domain different fromt he one which served the web page.',
        explanation: 'To ahndle cross-origin resource sharing, configure he server to include CORS headers like "Access-Control-Allow-Origin" in the response, specifying which domains are allowed to access the resources.',
        questionId: '27008',
        keyword: ['CORS'],
    },
    {
        question: 'Compressing assets (CSS, JavaScript, Images), implementing lazy loading for images and components, using CDN for static assets, optimizing CSS selectors, and leveraging browser caching are all strategies for.',
        answers: [
            'frontend performance optmization',
            'backend performance optimzation',
            'making a website go viral',
            'saving code to github',
        ],
        correct: 'frontend performance optmization',
        explanation: '',
        questionId: '27009',
        keyword: ['frontend optimization'],
    },
    {
        question: 'Progressive Web Apps are...',
        answers: [
            '',
            'Web applications taht use modern web technologies to provide a fast, reliable and engaging user experience.',
            '',
            '',
        ],
        correct: 'Web applications taht use modern web technologies to provide a fast, reliable and engaging user experience.',
        explanation: '',
        questionId: '27010',
        keyword: [''],
    },
    {
        question: 'Which is considered a key performance metric that is critical for a web application.',
        answers: [
            'First Contentful Paint (FCP)',
            'Largest Contentful Paint (LCP)',
            'Time to Interactive (TTI)',
            'All of the above',
        ],
        correct: 'All of the above',
        explanation: '',
        questionId: '27011',
        keyword: ['First Contentful Paint', 'Largest Contentful Paint', 'Time to Interactive'],
    },
    {
        question: 'What does First Contentful Paint (FCP) measure?',
        answers: [
            'FCP measures the time it takes for the browser to render the first piece of DOM content (text, images, or other non-white canvas elements) after a user navigates to a webpage.',
            'FCP meausres how quickly the main content of a webpage loads, specifically the largest image or text block visible within the viewport.',
            'FCP measures how long it takes for a webpage to become fully interactive and usable for a user.',
            'FCP measures the visual stability of a webpage.',
        ],
        correct: 'FCP measures the time it takes for the browser to render the first piece of DOM content (text, images, or other non-white canvas elements) after a user navigates to a webpage.',
        explanation: '',
        questionId: '27012',
        keyword: ['First Contentful Paint'],
    },
    {
        question: 'What does Largest Contentful Paint (LCP) measure?',
        answers: [
            'LCP measures the time it takes for the browser to render the first piece of DOM content (text, images, or other non-white canvas elements) after a user navigates to a webpage.',
            'LCP meausres how quickly the main content of a webpage loads, specifically the largest image or text block visible within the viewport.',
            'LCP measures the visual stability of a webpage.',
            'LCP measures how long it takes for a webpage to become fully interactive and usable for a user.',
        ],
        correct: 'LCP meausres how quickly the main content of a webpage loads, specifically the largest image or text block visible within the viewport.',
        explanation: '',
        questionId: '27012',
        keyword: ['Largest Contentful Paint (LCP)'],
    },
    {
        question: 'What does Time to Interactive (TTI) measure?',
        answers: [
            'TTI measures the time it takes for the browser to render the first piece of DOM content (text, images, or other non-white canvas elements) after a user navigates to a webpage.',
            'TTI meausres how quickly the main content of a webpage loads, specifically the largest image or text block visible within the viewport.',
            'TTI measures how long it takes for a webpage to become fully interactive and usable for a user.',
            'TTI measures the time it takes for a browser to respond to a user\'s first interaction with a website, such as clicking a button or link.',
        ],
        correct: 'TTI meeasures how long it takes for a webpage to become fully interactive and usable for a user.',
        explanation: '',
        questionId: '27013',
        keyword: ['Time to Interactive (TTI)'],
    },
    {
        question: 'What does First Input Delay (FID) measure?',
        answers: [
            'FID measures the time it takes for the browser to render the first piece of DOM content (text, images, or other non-white canvas elements) after a user navigates to a webpage.',
            'FID meausres how quickly the main content of a webpage loads, specifically the largest image or text block visible within the viewport.',
            'FID measures how long it takes for a webpage to become fully interactive and usable for a user.',
            'FID measures the time it takes for a browser to respond to a user\'s first interaction with a website, such as clicking a button or link.',
        ],
        correct: 'FID measures the time it takes for a browser to respond to a user\'s first interaction with a website, such as clicking a button or link.',
        explanation: '',
        questionId: '27014',
        keyword: ['Cumulative Layout Shift (CLS)'],
    },
    {
        question: 'What does Cumulative Layout Shift (CLS) measure?',
        answers: [
            'CLS measures the time it takes for the browser to render the first piece of DOM content (text, images, or other non-white canvas elements) after a user navigates to a webpage.',
            'CLS meausres how quickly the main content of a webpage loads, specifically the largest image or text block visible within the viewport.',
            'CLS measures how long it takes for a webpage to become fully interactive and usable for a user.',
            'CLS measures the visual stability of a webpage.',
        ],
        correct: 'CLS measures the visual stability of a webpage.',
        explanation: 'CLS quantifies how often users experience unexpected layout shifts as they interact with a site. A good CLS score, ideally is below 0.1, indicates a stable and user-friendly experience.',
        questionId: '27015',
        keyword: ['Cumulative Layout Shift (CLS)'],
    },
    {
        question: 'Implementing Context Security Policies (CSP), santizing user inputs to prevent XSS attacks, and using HTTPS for secure communications are methods used to?',
        answers: [
            'Protect a frontend application from common security threats.',
            'Import JavaScript code into a web application',
            'Connect to the internet',
            'Safegaurd your cryptocurrency.',
        ],
        correct: 'Protect a frontend application from common security threats.',
        explanation: '',
        questionId: '27016',
        keyword: ['common security threats of frontend applications'],
    },
    {
        question: 'What is HTML?',
        answers: [
            'HTML (HyperText Markup Language) is a markup language that uses tags to structure and define content on web pages.',
            'HTML (HyperText Mimmic Language) is a programming language exclusively used to create iPhone apps.',
            'HTML (HyperTransit Meduim Language) is a programming language exclusively used to create Android apps.',
            'HTML (HyperTextual Motion Loader) is a programming language exclusively used to create iPhone apps.',
        ],
        correct: 'HTML (HyperText Markup Language) is a markup language that uses tags to structure and define content on web pages.',
        explanation: '',
        questionId: '27017',
        keyword: ['HTML'],
    },
    {
        question: 'What is the DOM?',
        answers: [
            '',
            'The DOM or Document Object Model is a programming interface for HTML and XML documents. It represents the structure of a web page as a tree of objects.',
            '',
            '',
        ],
        correct: 'The DOM or Document Object Model is a programming interface for HTML and XML documents. It represents the structure of a web page as a tree of objects.',
        explanation: 'Each object in the tree corresponds to an element, attribute, or text node within the document.',
        questionId: '27018',
        keyword: ['Document Object Model'],
    },
    {
        question: 'What is CSS',
        answers: [
            '',
            '',
            '',
            '',
        ],
        correct: '',
        explanation: '',
        questionId: '27019',
        keyword: [''],
    },
    {
        question: 'What is the box model in CSS?',
        answers: [
            'It\'s the model that enhances the box.',
            'The Box Model is a third-party program that JavaScript uses to read CSS files',
            'The Box Model is another name for CSS animation.',
            'The Box Model describes how HTML elements are rendered as rectangular boxes in a web browser.',
        ],
        correct: 'The Box Model describes how HTML elements are rendered as rectangular boxes in a web browser.',
        explanation: '',
        questionId: '27020',
        keyword: ['CSS box model'],
    },
    {
        question: 'What are CSS preprocessors',
        answers: [
            '',
            '',
            '',
            'CSS preprocessors like SASS and LESS extend CSS with variables, nested rules, and functions.',
        ],
        correct: 'CSS preprocessors like SASS and LESS extend CSS with variables, nested rules, and functions.',
        explanation: '',
        questionId: '27021',
        keyword: ['CSS preprocessors'],
    },
    {
        question: 'What is AJAX?',
        answers: [
            'AJAX (Asynchronous JavaScript and XLM) enables web pages to update asynchronously by exchanging data with a server behind the scenes.',
            '',
            '',
            '',
        ],
        correct: 'AJAX (Asynchronous JavaScript and XLM) enables web pages to update asynchronously by exchanging data with a server behind the scenes.',
        explanation: '',
        questionId: '27022',
        keyword: ['AJAX'],
    },
    {
        question: 'What is React?',
        answers: [
            'React is a JavaScript library for building user interfaces, focusing on component-based architecture and state management.',
            '',
            '',
            '',
        ],
        correct: 'React is a JavaScript library for building user interfaces, focusing on component-based architecture and state management.',
        explanation: '',
        questionId: '27023',
        keyword: [''],
    },
    {
        question: 'Which answer best explains server-side rendering?',
        answers: [
            '',
            '',
            '',
            'Server-side rendering generates HTML on the server and sends it to the client, improving initial load tiems and SEO.',
        ],
        correct: 'Server-side rendering generates HTML on the server and sends it to the client, improving initial load tiems and SEO.',
        explanation: '',
        questionId: '27024',
        keyword: ['server-side rendering'],
    },
    {
        question: 'Which answer best explains client-side rendering?',
        answers: [
            '',
            '',
            'Client-side rendering renders pages directly in the browser using JavaScript, which leads to faster subsequent page loads.',
            '',
        ],
        correct: 'Client-side rendering renders pages directly in the browser using JavaScript, which leads to faster subsequent page loads.',
        explanation: '',
        questionId: '27025',
        keyword: ['client-side rendering'],
    },
    {
        question: 'Your interview asks you to discuss frontend testing strategies, which answer would help you in frontend testing?',
        answers: [
            'Jest, React Testing Library, Cypress or Selenium',
            'Pytest, JUnit, MSTest, MUnit',
            'Github, GitBucket',
            'Foundry Test',
        ],
        correct: 'Jest, React Testing Library, Cypress or Selenium',
        explanation: '',
        questionId: '27026',
        keyword: ['frontend testing strategies', 'Jest', 'React Testing Library', 'Cypress', 'Selenium'],
    },
    {
        question: '',
        answers: [
            '',
            '',
            '',
            '',
        ],
        correct: '',
        explanation: '',
        questionId: '27027',
        keyword: [''],
    },
    {
        question: '',
        answers: [
            '',
            '',
            '',
            '',
        ],
        correct: '',
        explanation: '',
        questionId: '27028',
        keyword: [''],
    },
    {
        question: '',
        answers: [
            '',
            '',
            '',
            '',
        ],
        correct: '',
        explanation: '',
        questionId: '27029',
        keyword: [''],
    },
    {
        question: '',
        answers: [
            '',
            '',
            '',
            '',
        ],
        correct: '',
        explanation: '',
        questionId: '27030',
        keyword: [''],
    },
]
export default fullStackQuestionBank;

//  {
//         question: '',
//         answers: [
//             '',
//             '',
//             '',
//             '',
//         ],
//         correct: '',
//         explanation: '',
//         questionId: '27000',
//         keyword: [''],
//     },