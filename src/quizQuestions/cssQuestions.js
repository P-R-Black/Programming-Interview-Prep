import svgImageProp from '../assets/questionImages/svg2.jpeg';

const cssQuestionBank = [
    {
        question: 'If using CSS Grid, which media query would you use to change the number of columns for screen widths larger than or equal to 768px?',
        answers: [
            '@media (max-width: 767px) {.container {grid-template-columns: repeat(4, 1fr); 1}',
            '@media (min-width: 768px) {.container {grid-template-rows: repeat(4, 1fr);}}',
            '@media (max-width: 767px) {.container {grid-template-rows: repeat(4, 1fr); }}',
            '@media (min-width: 768px) {.container {grid-template-columns: repeat(4, 1fr);}}',
        ],
        correct: '@media (min-width: 768px) {.container {grid-template-columns: repeat(4, 1fr);}}',
        explanation: 'You would start with @media (min-width: 768px) for your grid container to adjust the column layout specifically for viewports that meet or exceed the 768px width',
        questionId: '26000',
        keyword: ['Media queries', 'Responsive'],
    },
    {
        question: 'What is the box model?',
        answers: [
            'It\'s the model that enhances the box.',
            'The Box Model is a third-party program that JavaScript uses to read CSS files',
            'The Box Model is another name for CSS animation.',
            'The Box Model describes how HTML elements are rendered as rectangular boxes in a web browser.',
        ],
        correct: 'The Box Model describes how HTML elements are rendered as rectangular boxes in a web browser.',
        explanation: '',
        questionId: '26001',
        keyword: ['Box Model'],
    },
    {
        question: 'What are the four distinct components of the box model?',
        answers: [
            'Margin, Height, Width, Color',
            'Background Color, Font Size, Display, Content',
            'Content, Padding, Border, Margin',
            'Border, Color, Flex, Grid',
        ],
        correct: 'Content, Padding, Border, Margin',
        explanation: 'Each element in the box model consists of four distinct components, layered from the inside out, content, padding, border, margin.',
        questionId: '26002',
        keyword: ['Box Model'],
    },
    {
        question: 'What is the difference between "visibility: hidden" and "display: none"',
        answers: [
            '"visibility: hidden" hides the element but preserves its space and "display: none" hides the element and remove its space from the layout.',
            '"visibility: hidden" hides the element and removes its space from the layout and "display: none" hides the element but preserves its space.',
            '"visibility: hidden" and "display: none" do the exact same thing, there is no difference between the two. ',
            '"visibility: hidden" is used to hide elements in a grid and "display: none" is used to hide elements in a flexbox.',
        ],
        correct: '"visibility: hidden" hides the element but preserves its space and "display: none" hides the element and remove its space from the layout.',
        explanation: '',
        questionId: '26003',
        keyword: ['visibility: hidden', 'display: none'],
    },
    {
        question: 'What is a display flex?',
        answers: [
            '"display: flex" hides the element and removes its space from the layout.',
            '"display: flex" describes how HTML elements are rendered as rectangular boxes in a web browser.',
            '"display: flex" establishes a flexbox container, which allows for flexible and responsive layouts by controlling the arrangement and alignment of its direct child elements, known as flex items.',
            '"display: flex" is the CSS command used to bend or warp a border.',
        ],
        correct: '"display: flex" establishes a flexbox container, which allows for flexible and responsive layouts by controlling the arrangement and alignment of its direct child elements, known as flex items.',
        explanation: '',
        questionId: '26004',
        keyword: ['flexbox'],
    },
    {
        question: 'What are psuedo-classes and psuedo-elements?',
        answers: [
            'pseudo-classes and pseudo-elements are an alternate term used to describe the "Box Model"',
            'pseudo-classes and pseudo-elements are semantic tags that are used to process the inputs of a form.',
            'pseudo-classes and pseudo-elements are not related to CSS, but are terms used to describe the atmosphere of Saturn.',
            'pseudo-classes and pseudo-elements are special keywords used with selectors to apply styles to elements.',
        ],
        correct: 'pseudo-classes and pseudo-elements are special keywords used with selectors to apply styles to elements.',
        explanation: '',
        questionId: '26005',
        keyword: ['psuedo classes', 'psuedo elements'],
    },

    {
        question: 'What is the difference between margin and padding?',
        answers: [
            'Margin and padding are the same thing, there is no difference.',
            'Padding creates space around an element, while margin creates space within an element.',
            'Margin creates space around an element, while padding creates space within an element.',
            'Margin controls with width of an element and padding conrols the height of an element.',
        ],
        correct: 'Margin creates space around an element, while padding creates space within an element.',
        explanation: 'Margin is the space outside the element\'s border, separating it from other elements, while padding is the space between the element\'s content and its border.',
        questionId: '26006',
        keyword: ['margin', 'padding'],
    },
    {
        question: 'You\'re creating a responsive image gallery using flexblox and you want the images to wrap into multiple lines when there isn\'t enough space on one line. Which property should you apply to the flex container?',
        answers: [
            'flex-wrap: nowrap',
            'flex-wrap: wrap-reverse',
            'flex-wrap: wrap',
            'align-items: stretch',
        ],
        correct: 'flex-wrap: wrap',
        explanation: 'To enable images in a flex container to wrap onto multiple lines when there isn\'t enough space on a single line, the flex-wrap property should be applied to the flex container.',
        questionId: '26007',
        keyword: ['flexbox', 'flex-wrap'],
    },
    {
        question: 'What are psuedo-classes?',
        answers: [
            'Pseudo-classes are tags like the <div> and <span> tags.',
            'Pseudo-classes select and style elements based on their current state or context, rather than their position in the document tree.',
            'Pseudo-classes allow styling of specific, otherwise inaccessible, parts of an element or the insertion of content that is not part of the document\'s HTML.',
            'Pseudo-classes hides elements and removes its space from the layout.',
        ],
        correct: 'Pseudo-classes select and style elements based on their current state or context, rather than their position in the document tree.',
        explanation: '',
        questionId: '26008',
        keyword: ['psuedo classes', 'psuedo elements'],
    },
    {
        question: 'What are psuedo-elements?',
        answers: [
            'Pseudo-elements select and style elements based on their current state or context, rather than their position in the document tree.',
            'Pseudo-elements allow styling of specific, otherwise inaccessible, parts of an element or the insertion of content that is not part of the document\'s HTML.',
            'Pseudo-elements hides elements and removes its space from the layout.',
            'Pseudo-elements are tags like the <div> and <span> tags.',
        ],
        correct: 'Pseudo-elements allow styling of specific, otherwise inaccessible, parts of an element or the insertion of content that is not part of the document\'s HTML.',
        explanation: '',
        questionId: '26009',
        keyword: ['psuedo classes', 'psuedo elements'],
    },
    {
        question: '":hover" is an example of a',
        answers: [
            'CSS Library',
            'Pseudo-elements',
            'A command to make HTML elements bounce around the page',
            'Pseudo-class',
        ],
        correct: 'Pseudo-class',
        explanation: '',
        questionId: '26010',
        keyword: ['psuedo classes', 'psuedo elements'],
    },
    {
        question: '"::before" is an example of a',
        answers: [
            'CSS Library',
            'Pseudo-element',
            'A command to make HTML elements bounce around the page',
            'Pseudo-class',
        ],
        correct: 'Pseudo-element',
        explanation: '',
        questionId: '26010',
        keyword: ['psuedo classes', 'psuedo elements'],
    },
    {
        question: 'You need to style an unordered list that has a class navigation and is inside a header element. There are other unordered lists on the page with the same class, but you want to apply styles only to the one inside the header.',
        answers: [
            'ul.naviation',
            'header ul.navigation',
            '#header.naviation',
            'header > ul',
        ],
        correct: 'header ul.navigation',
        explanation: '',
        questionId: '26011',
        keyword: ['CSS Selectors'],
    },
    {
        question: 'What is the CSS specificity value for "header ul.navigation"',
        answers: [
            '0,0,1,2',
            '0,1,2,3',
            '1,1,0,0',
            '1,1,0,0',
        ],
        correct: '0,0,1,2',
        explanation: '0 inline styles, 0 ID selectors, 1 class (.naviation), 2 element (header & ul)',
        questionId: '26012',
        keyword: ['CSS specificity values'],
    },
    {
        question: 'What is the CSS specificity value for "#header nav ul.primary > li.active"',
        answers: [
            '0,0,1,1',
            '0,1,2,3',
            '1,1,0,0',
            '1,1,0,0',
        ],
        correct: '0,1,2,3',
        explanation: '0 inline styles, 1 ID Selector (#header), 2 Class Selectors (.primary & .active), 3 elements/pseudo-elements (nav, ul, & li)',
        questionId: '26013',
        keyword: ['CSS specificity values'],
    },
    {
        question: 'What is the CSS specificity value for "<p style="color: red;">Hello</p>"',
        answers: [
            '0,0,1,1',
            '0,1,2,3',
            '1,0,0,0',
            '1,1,0,0',
        ],
        correct: '1,0,0,0',
        explanation: '1 inline style, 0 ID Selectors, 0 Class Selectors, 0 for elements/pseudo-elements',
        questionId: '26014',
        keyword: ['CSS specificity values'],
    },
    {
        question: 'You need to blur a background, but keep the text and buttons in the foreground sharp and easy to read, which CSS property should you using to blur the background image?',
        answers: [
            'background-filter',
            'blur-imageC',
            'filter',
            'background-blur',
        ],
        correct: 'filter',
        explanation: 'filter lets you apply graphical effects (like blur) to an element or its contents. For example .background { filter: blur(5px);}',
        questionId: '26015',
        keyword: ['CSS Styling', 'filter'],
    },
    {
        question: 'You want to apply a 100% grayscale effect to all images within a specific section of your website with an ID of gallery, which CSS rule would you apply?',
        answers: [
            '#gallery img { filter:gray(100%) }',
            '#gallery img { filter-effect:grayscale(100%) }',
            '#gallery img { filter-type: grayscale(100%) }',
            '#gallery img { filter: grayscale(100%); }',
        ],
        correct: '#gallery img { filter: grayscale(100%); }',
        explanation: '',
        questionId: '26016',
        keyword: ['CSS Styling', 'filter'],
    },
    {
        question: 'You have an image on your website that you want to apply a blur effect to using an SVG markup filter, as shown below. How can you use this filter with the CSS filter property?',
        image: svgImageProp,
        answers: [
            'filter: url(#blurFilter)',
            'svg(#blurFilter)',
            'filter:markup(#blurFilter)',
            '#blurFilter',
        ],
        correct: 'filter: url(#blurFilter)',
        explanation: "The value of the CSS filter property can reference an SVG filter using the url() syntax pointing to the filter’s ID",
        questionId: '26017',
        keyword: [''],
    },
];
export default cssQuestionBank;

// {
//     question: '',
//     answers: [
//         '', 
//         '', 
//         '', 
//         '', 
//     ],
//     correct: '',
//     explanation: '',
//     questionId: '24004',
//     keyword: [''],
// },